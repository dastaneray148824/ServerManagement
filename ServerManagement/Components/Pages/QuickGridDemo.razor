@page "/quickgrid"
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
<h3>QuickGridDemo</h3>
<br/>
@if (servers != null)
{
    <QuickGrid Items="servers.AsQueryable()" Pagination="paginationState"> <!--kolay yollu grid atma-->
        <PropertyColumn Property="s =>s.Name"></PropertyColumn>
        <PropertyColumn Property="s=>s.City" Sortable="true"></PropertyColumn>
        <TemplateColumn Title="Status" Sortable="true" SortBy="GridSort<Server>.ByAscending(s=>s.IsOnline)">
            @if (context.IsOnline)
            {
                <div style="color:green">
                    Online
                </div>
            }
            else
            {
                <div style="color:red">
                    Offlline
                </div>
            }
        </TemplateColumn>

        <TemplateColumn Title="People Online">
            @if (context.IsOnline)
            {
                Random random = new Random();
                int randomNumber = random.Next(0, 500);
                <text>@randomNumber</text>
            }
            else
            {
                <text>N/A</text>
            }
        </TemplateColumn>
        
        <TemplateColumn>
            <button type="button" class="btn btn-sm fw-semibold text-white border-0" @onclick="(() => { context.IsOnline = !context.IsOnline; })" style="background-color:@(context.IsOnline ? "#dc3545" : "#28a745")">@(context.IsOnline ? "Turn Off" : "Turn On")</button>
        </TemplateColumn>
        
        <TemplateColumn>
            <a href="servers/edit/@(context.ServerId)">Edit</a>
        </TemplateColumn>
        
        <TemplateColumn>
            <button type="button" class="btn btn-primary" style="background-color:#007bff; color:white; border:none;" @onclick="(() => { DeleteServer(context.ServerId); })">Delete</button>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="paginationState"></Paginator>
}

@code {
    private List<Server>? servers = serverEFCoreRepository.GetServers();

    private PaginationState paginationState = new PaginationState { ItemsPerPage = 5 };

    private void DeleteServer(int serverId)
    {
        if (serverId > 0)
        {
            serverEFCoreRepository.DeleteServer(serverId);
            //this.servers = serverEFCoreRepository.GetServersByCity(selectedCity);
            ////serversa atadık uı kısmında anlık yenileyip city leri getirmesi için
            NavigationManager.NavigateTo("/quickgrid", true);

        }
    }


}
