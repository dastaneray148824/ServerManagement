@page "/serverstatus"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using System.Runtime.CompilerServices
@using ServerManagement.StateStore
@inherits ComponentBase

@inject SessionStorage sessionStorage
<h3>SetStatus</h3>
<br/>
@if (!string.IsNullOrWhiteSpace(errormessage))
{
    <div class="alert-danger">@errormessage</div>
}
@if (server is not null)
{
    <FieldComponent Label="Server Status">
        <Control>
            <input type="checkbox"@bind-value="server.IsOnline" class="form-check-input"/>
        </Control>
    </FieldComponent>
    <br/>
    <button type="button" class="btn btn-primary" @onclick="Save">Save</button>
}
@code {
    private string? errormessage;
    private Server? server;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.server = await this.sessionStorage.GetServerAsync();
            StateHasChanged();
        }
    }

    private async Task Save()
    {
        if (server is not null)
        {
            await sessionStorage.SetServerAsync(null);
            serverEFCoreRepository.AddServer(server);
            NavigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
        }
    }
}
