@page "/cityname"
@using ServerManagement.StateStore

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject SessionStorage sessionStorage
@inherits ComponentBase

<h3>SetCityName</h3>
<br />
@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert-danger">
        @errorMessage
    </div>
}
@if (server is not null)
{
    <FieldComponent Label="City">
        <Control>
            <input type="text" @bind-value="server.City" class="form-control"/>
        </Control>
    </FieldComponent>
    <br />
    <button type="button" class="btn btn-primary" @onclick="GoNext">Next</button>
}

@code {
    private Server? server;
    private string errorMessage;
   
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.server = await this.sessionStorage.GetServerAsync();
            StateHasChanged();
        }
    }
    private async Task GoNext()
    {
        if (string.IsNullOrWhiteSpace(server.City))
        {
            this.errorMessage = "Server name wasn't provided";
        }
        else
        {
            await sessionStorage.SetServerAsync(server);
            NavigationManager.NavigateTo("/serverstatus");
        }
    }
}

