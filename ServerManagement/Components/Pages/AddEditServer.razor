@page "/server/{id:int?}"
@using System.Diagnostics.Eventing.Reader
@inject NavigationManager NavigationManager
@if (Id.HasValue)
{
    <h3>Edit Server</h3>
}
else
{
    <h3>Add Server</h3>
}
<EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
    <!--hata mesajları-->
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    @if (server.ServerId > 0)
    {
        <InputNumber @bind-Value="server.ServerId" hidden></InputNumber>
    }
    <FieldComponent Label="Name">
        <Control>
            <InputText @bind-Value="server.Name" class=" form-control"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage For="() => server.Name"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="City">
        <Control>
            <InputText @bind-Value="server.City" class=" form-control"></InputText>
        </Control>
        <ValidationControl>
            <ValidationMessage For="() => server.City"></ValidationMessage>
        </ValidationControl>
    </FieldComponent>

    <FieldComponent Label="Online">
        <Control>
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        </Control>
    </FieldComponent>
    @if (!string.IsNullOrEmpty(InfoMessage))
    {
        <div class="alert alert-warning">@InfoMessage</div>
    }
    
    @if (server.ServerId > 0)
    {
        <button class="btn btn-primary" type="submit">Update</button>
    }
    else
    {
        <button class="btn btn-primary" type="submit">Save</button>
    }
    <br/>
    &nbsp;
    <br/>
    <a href="/servers" class="btn btn-primary">Close</a>

</EditForm>
@code {
    [Parameter] public int? Id { get; set; }
    [SupplyParameterFromForm]
    private Server? server { get; set; }
    private string InfoMessage { get; set; }

    protected override void OnParametersSet()
    {
        if (this.Id.HasValue)

            server ??= ServersRepository.GetServerById(this.Id.Value);
        else
            server ??= new Server() { IsOnline = false };
    }
    private void Submit()
    {
        try
        {
            //eğer kod bitme şansı varsa direk orada kes
            if (server == null) throw new Exception();

            if (server != null)
            {
                if (this.Id.HasValue)
                {
                    var existing = ServersRepository.GetServerById(server.ServerId);
                    if (existing.Name == server.Name && existing.IsOnline == server.IsOnline && existing.City == server.City)
                    {
                        InfoMessage = "No changes made to the server.";
                        return;
                    }
                    ServersRepository.UpdateServer(server.ServerId, server);
                }
                else
                    ServersRepository.AddServer(server);
            }
            NavigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }

}
