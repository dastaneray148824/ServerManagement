@page "/servers"
@using System.Diagnostics
@using Microsoft.AspNetCore.SignalR
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
<div class="container-fluid text-center mt-4">
    <div class="row justify-content-center gx-3 gy-4">
        @foreach (var cityName in cities)
        {
            <div class="col-6 col-sm-4 col-md-3 col-lg-2">
                <div class="card h-100 shadow-sm border @((selectedCity == cityName) ? "border-primary border-3" : "")">

                    <!-- Sabit yükseklikte image container -->
                    <div style="height: 150px; overflow: hidden;">
                        <img src="@($"/images/{cityName}.jpeg")"
                             class="card-img-top"
                             alt="@cityName"
                             style="width: 100%; height: 100%; object-fit: cover;"
                             onerror="this.src='/images/placeholder.jpg'" />
                    </div>

                    <!-- Buton hizalı -->
                    <div class="card-body d-flex align-items-end justify-content-center p-2">
                        <button class="btn btn-primary w-100" @onclick="() => SelectCity(cityName)">
                            @cityName
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<br/>



<div class="input-group mb-3">

    <input type="text" class="form-control" placeholder="Search Servers" @bind-value="serverFilter"
           @bind-value:event="oninput"/>
    <button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>

</div>

<br/>

<ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent>



<ServerComponent @rendermode="InteractiveServer"></ServerComponent> <!--partial view-->


<a href="/servers/add" class="btn btn-link">Add Server</a>






@code {

    private List<string> cities = CitiesRepository.GetCities();

    private string selectedCity { get; set; }

    private string _serverFilter = "";

    private string serverFilter { get =>_serverFilter;
        set
        {
            _serverFilter = value;
           // this.servers = ServersRepository.SearchServers(serverFilter);
        }
        }



    private void SelectCity(string SelectedCityName)
    {
        this.selectedCity = SelectedCityName;
      //  this.servers= ServersRepository.GetServersByCity(selectedCity);

    }

   /* private void HandleServerFilterChange(ChangeEventArgs args) //	Bu, input kutusundaki değeri yakalayan olay argümanıdır.
    {
        serverFilter = args.Value.ToString() ?? string.Empty; //Kullanıcının girdiği değeri alır
    }
    */

    private void HandleSearch()
    {
        //this.servers= ServersRepository.SearchServers(serverFilter);
        this.selectedCity=String.Empty;
    }

}

